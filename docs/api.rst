
.. _api:

Developer Interface
===================

.. module:: gaclient

This section covers the developers interface in detail. For a more
high-level guide please refer to the User Guide.


.. _logging:

Logging
-------

By default all log messages that are generated by gaclient are suppressed.
You can turn on logging by adding your handler to the ``gaclient`` logger::

    import logging

    logger = logging.getLogger('gaclient')
    logger.addHandler(logging.StreamHandler())
    logger.setLevel('DEBUG')

You could also provide gaclient with any logger that your application
currently uses by settings :mod:`gaclient.LOG`::
    
    import logging

    gaclient.LOG = logging.getLogger('my_apps_logger')


Session Management
------------------

To download data from Google Analytics a valid OAuth2 Session is required. A
session can be created with the :func:`build_session` function. Prior to
using this session the user needs to be asked for consent.


.. autofunction:: build_session
.. autofunction:: generate_consent_url


Downloading Data
----------------

The recommended way to retrieve data from Google Analytics is through
a :class:`Cursor` instance. This instance will automatically parse the
response data, and acts like an iterator.

To download a complete dataset potentially spread across multiple pages
use the :class:`ResponseIterator`.

Alternatively one can download raw data using the :class:`build_data_query`
and :func:`execute_request` functions.

.. autoclass:: Cursor
   :members:

.. autoclass:: ResponseIterator
    :members:

.. autofunction:: build_data_query



Exceptions and Errors
---------------------

.. autoclass:: Error
.. autoclass:: InvalidDateRange
.. autoclass:: InvalidResponse
.. autoclass:: UnsupportedDataType
.. autoclass:: AnalyticsError
.. autoclass:: InvalidGrantError
.. autoclass:: InvalidCredentials

Utilities
---------

The following functions are used internally by the gaclient.

.. autofunction:: parse_date
.. autofunction:: add_ga_prefix
.. autofunction:: remove_ga_prefix
.. autofunction:: execute_request

